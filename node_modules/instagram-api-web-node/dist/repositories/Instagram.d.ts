import { Repository } from '../core/repository';
import { AccountRepositoryLoginResponseRootObject, AccountRepositoryRegister, ChallengeStateResponse, MediaInfoResponseRootObject, UserRepositoryInfoResponseUser } from '../responses';
import * as request from 'request-promise-native';
export declare class Instagram extends Repository {
    request: request;
    login(username: string, password: string): Promise<AccountRepositoryLoginResponseRootObject>;
    getUserByUsername(username: any): Promise<any>;
    _getGis(path: any): Promise<string>;
    follow(userId: any): Promise<any>;
    like(mediaId: any): Promise<any>;
    likeComments(idcomments: number, shortcode: string): Promise<any>;
    getMediaByShortcode({ shortcode }: {
        shortcode: any;
    }): Promise<any>;
    getActivity(): Promise<any>;
    UserInfo(id: string | number): Promise<UserRepositoryInfoResponseUser>;
    MediaInfo(mediaId: string): Promise<MediaInfoResponseRootObject>;
    currentUser(): Promise<import("../responses").AccountRepositoryCurrentUserResponseUser>;
    BypassChallenge(choice: string, isReplay?: boolean): Promise<ChallengeStateResponse>;
    getProfile(): Promise<any>;
    _getSharedData(url?: string): Promise<any>;
    getMediaComments({ shortcode, first, after }: {
        shortcode: any;
        first?: number;
        after?: string;
    }): Promise<any>;
    GetCommentInfo({ comment_id }: {
        comment_id: any;
    }): Promise<any>;
    GetTimelineFeed(): Promise<any>;
    friendshipInfo(id: number): Promise<any>;
    topsearch(username: string): Promise<any>;
    userstory(pk: number): Promise<any>;
    StorySeen(form: any): Promise<any>;
    search_click(pk: number): Promise<any>;
    userFeed(pk: number): Promise<any>;
    createAttemp(username: string, password: string, phone_number: string, first_name: string): Promise<AccountRepositoryRegister>;
    checkAge(day: string, month: string, year: string): Promise<any>;
    sendOTP(phone_number: string): Promise<any>;
    create(username: string, password: string, phone_number: string, first_name: string, day: string, month: string, year: string, sms_code: number): Promise<AccountRepositoryRegister>;
}
